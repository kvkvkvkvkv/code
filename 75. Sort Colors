75. Sort Colors
Medium

8243

372

Add to List

Share
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]
 

Constraints:

n == nums.length
1 <= n <= 300
nums[i] is either 0, 1, or 2.







class Solution {
    public void sortColors(int[] nums) {
        
        int z = 0;
        int o = 0;
        int t = 0;
        
        for(int ele:nums){
            if(ele==0)
                z++;
            else if(ele==1)
                o++;
            else
                t++;
        }
        
        for(int i=0;i<z;i++){
            nums[i]=0;
        }
        for(int i=z;i<z+o;i++){
            nums[i]=1;
        }
        for(int i=z+o;i<nums.length;i++){
            nums[i]=2;
        }
    }
}


class Solution {
    public void sortColors(int[] nums) {
        
        int z=0;
        int o=0;
        int t=nums.length-1;
        
        while(o<=t){
            
            if(nums[o]==0){
                int temp = nums[o];
                nums[o] = nums[z];
                nums[z] = temp;
                z++;
                o++;
            }else if(nums[o]==2){
                int temp = nums[o];
                nums[o] = nums[t];
                nums[t] = temp;
                t--;
            }else{
                o++;
            }
        }
    }
}




