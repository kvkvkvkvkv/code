class Solution {

    Map<Integer, List<Integer>> map = new HashMap(); 
    Set<Integer> set = new HashSet();

    public boolean validTree(int n, int[][] edges) {

        if(edges.length > n-1) {
            return false;
        }
        
        for(int[] ele:edges) {
            map.putIfAbsent(ele[0], new ArrayList());
            map.get(ele[0]).add(ele[1]);
            map.putIfAbsent(ele[1], new ArrayList());
            map.get(ele[1]).add(ele[0]);
        }

        int count = 0;
        conn(0);
        return set.size() == n;
    }

    void conn(int cur) {
        if(set.contains(cur)) {
            return;
        }
        set.add(cur);
        if(map.get(cur) == null) {
            return;
        }
        for(int ele:map.get(cur)) {
            conn(ele);
        }
    }
}


https://leetcode.com/problems/graph-valid-tree/
