421. Maximum XOR of Two Numbers in an Array
Medium

2714

243

Add to List

Share
Given an integer array nums, return the maximum result of nums[i] XOR nums[j], where 0 <= i <= j < n.

 

Example 1:

Input: nums = [3,10,5,25,2,8]
Output: 28
Explanation: The maximum result is 5 XOR 25 = 28.
Example 2:

Input: nums = [14,70,53,83,49,91,36,80,92,51,66,70]
Output: 127
 

Constraints:

1 <= nums.length <= 2 * 105
0 <= nums[i] <= 231 - 1
Accepted
94,873
Submissions
171,845

class Solution {
    public int findMaximumXOR(int[] nums) {
        
        Trie trie = new Trie();
        
        int max = Integer.MIN_VALUE;
        
        for(int num:nums)
            insert(trie,num);
        
        for(int ele:nums){
            max = Math.max(max,xor(ele,trie));   
        }
        return max;
    }
    
    void insert(Trie root,int num){
        Trie cur = root;
        
        for(int i=31;i>=0;i--){
            int b = (num>>i) & 1;
            if(cur.bit[b]==null){
                cur.bit[b] = new Trie();
            }
            cur = cur.bit[b];
        }
    }
    
    int xor(int num,Trie root){
        Trie cur = root;
        int val = 0;
        for(int i=31;i>=0;i--){
            int b = (num>>i) & 1;
            if(b==1){
              if(cur.bit[0]==null){
                cur = cur.bit[1];
              }else{
                   cur = cur.bit[0];
                   val+=(1<<i);  
              }
           } else{
               if(cur.bit[1]==null){
                cur = cur.bit[0];
              }else{
                   cur = cur.bit[1];
                   val+=(1<<i);  
              } 
            }
        }
        return val;
    }
    
    
}
class Trie{
    
    Integer val;
    Trie[] bit;
    
    Trie(){
        this.bit = new Trie[2];
        this.val = null;
    }
}
