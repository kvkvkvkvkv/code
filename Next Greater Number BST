Next Greater Number BST
Easy

31

5

Add to favorites
Given a BST node, return the node which has value just greater than the given node.

Example:

Given the tree

               100
              /   \
            98    102
           /  \
         96    99
          \
           97
Given 97, you should return the node corresponding to 98 as thats the value just greater than 97 in the tree.

If there are no successor in the tree ( the value is the largest in the tree, return NULL).

Using recursion is not allowed.

Assume that the value is always present in the tree.

PROBLEM APPROACH:

Complete solution in the hint.






/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode getSuccessor(TreeNode root, int x) {

        if(root==null)
        return null;

        TreeNode res=null;
        while(root!=null)
        {
            if(x<root.val)
            {
                res=root;
                root=root.left;
            }
            else
            root=root.right;
        }

        return res;
    }
}






public class Solution {
	public TreeNode getSuccessor(TreeNode a, int b) {
	    if(a == null)
	        return null;
	    TreeNode itr = a;
	    TreeNode an = null;
	    while(itr != null){
	        if(itr.val == b)
	            break;
	        
	        else if(itr.val > b){
	            an = itr;
	            itr = itr.left;
	        }
	        else
	            itr = itr.right;
	    }
	    if(itr.right != null){
	        itr = itr.right;
	        while(itr.left != null)
	            itr = itr.left;
	        return itr;
	    }
	    return an;
	}
}
