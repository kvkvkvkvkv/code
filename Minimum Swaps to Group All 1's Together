1151. Minimum Swaps to Group All 1's Together
Medium

613

6

Add to List

Share
Given a binary array data, return the minimum number of swaps required to group all 1â€™s present in the array together in any place in the array.

 

Example 1:

Input: data = [1,0,1,0,1]
Output: 1
Explanation: There are 3 ways to group all 1's together:
[1,1,1,0,0] using 1 swap.
[0,1,1,1,0] using 2 swaps.
[0,0,1,1,1] using 1 swap.
The minimum is 1.
Example 2:

Input: data = [0,0,0,1,0]
Output: 0
Explanation: Since there is only one 1 in the array, no swaps are needed.
Example 3:

Input: data = [1,0,1,0,1,0,0,1,1,0,1]
Output: 3
Explanation: One possible solution that uses 3 swaps is [0,0,0,0,0,1,1,1,1,1,1].




brute - O(n^2) run 2 loops of window size = no of 1's
O(n)
sliding window

class Solution {
    public int minSwaps(int[] data) {
        int n = data.length;
        int c =0;
        
        for(int i=0;i<n;i++){
            c+=data[i];
        }
       
        int currentOne = 0;
        int maxOne = 0;
        
        for(int i=0;i<n;i++){
            currentOne+=data[i];
            if(i>=c){
                currentOne -= data[i-c];
            }
            maxOne = Math.max(currentOne,maxOne);
        }
        return c-maxOne;
    }
}
